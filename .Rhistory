mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24, face = "bold")  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(unique(barplot_mat_for_n$class))))
barplot_mat_for_n$class
category_order
# Define el orden deseado de las categorías en la leyenda (de MI a IS_Tn)
category_order <- c("MI", "Integron", "CE", "Phage_like", "Phage", "IS_Tn")
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Generar la grafica base
barplot_specI_class_count_all <- ggplot(barplot_mat, aes(y = class, x = frac, fill = mge)) +
# Barras horizontales, borde gris
geom_bar(stat = "identity", color = "grey60") +
# Colores personalizados para los MGEs
scale_fill_manual("MGE", values = colc)
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24, face = "bold")  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24, face = "bold")  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
scale_fill_discrete(breaks=category_order)
category_order
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24, face = "bold")  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
scale_fill_discrete(breaks= c("MI", "Integron", "CE", "Phage_like", "Phage", "IS_Tn"))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24, face = "bold")  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 1.1, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 0.5, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 5, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 15, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 20, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 22, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 25, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
## Añadir detalles estéticos y anotaciones
barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 23.5, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
# Guardar la figura como archivo temporal
tmp_file <- tempfile(fileext = ".png")
# Crear la imagen del árbol + heatmap
png(tmp_file, width = 1000, height = 800, res = 150)
# Filogenia
xx_yy <- phylo.heatmap.coords(
class_tree_w_g9,
phylo_heatmap_mat,
fsize = c(0.8, 0.9, 0.7),
colors = plot_colors,
grid = TRUE,
split = c(0.7, 0.3),
lwd = 1,
breaks = heatmap_breaks,
mar = c(1.2,1.2,1.2,1.2)
)
# Agregar titulos de los nodos
nodelabels("Bacteria", node = node_bacteria, frame = "none", adj = c(1.1, -0.1), font = 2, cex = 1)
nodelabels("Archaea", node = node_archaea, frame = "none", adj = c(1.1, -0.1), font = 2, cex = 1)
dev.off()
# Leer imagen y convertirla en un objeto ggdraw
p_phylo_heatmap <- ggdraw() + draw_image(tmp_file)
p_phylo_heatmap
## Añadir detalles estéticos y anotaciones
Fig3A_barplot <- barplot_specI_class_count_all +
# Límite extendido para espacio de anotaciones
scale_x_continuous(
breaks = c(0, 0.25, 0.5, 0.75, 1.0),
limits = c(0, 1.1)
) +
geom_text(
data = barplot_mat_for_n,
# Mostrar suma total de MGEs por clase
mapping = aes(y = class, x = 1.05, label = paste("", round(total_mge))),
inherit.aes = FALSE,
col = "black",
size = 6) +
# Agregar un título en una posición personalizada
annotate("text", x = 1.05, y = 23.5, label = "Avg. MGE", size = 6, fontface = "bold", color = "black") +
# etiquetas
labs(title = "Relative proportion",y = "",  x = "") +
# Estética limpia estilo Cowplot
theme_cowplot(font_size = 20) +
# Etiquetas del eje X horizontales
theme(
axis.text.y = element_blank(), #  axis.text.y = element_text(hjust = 0, vjust = 0.5) # Alinear texto del eje Y
axis.text.x = element_text(angle = 0),
legend.position = "bottom",       # Leyenda abajo
legend.direction = "horizontal",  # Disposición horizontal de la leyenda
plot.title = element_text(hjust = 0.5, size = 24)  # Centrar y estilizar el título
) +
# Asegura que las categorías estén en una sola fila
guides(fill = guide_legend(ncol = length(category_order)))
Fig3A_barplot
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, rel_widths = c(1, 1))
Fig3A_final_plot
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, rel_widths = c(2, 1))
Fig3A_final_plot
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, align = "v", rel_widths = c(1.5, 1))
Fig3A_final_plot
# Guardar la figura como archivo temporal
tmp_file <- tempfile(fileext = ".png")
# Crear la imagen del árbol + heatmap
png(tmp_file, width = 1000, height = 1500, res = 150)
# Filogenia
xx_yy <- phylo.heatmap.coords(
class_tree_w_g9,
phylo_heatmap_mat,
fsize = c(0.8, 0.9, 0.7),
colors = plot_colors,
grid = TRUE,
split = c(0.7, 0.3),
lwd = 1,
breaks = heatmap_breaks,
mar = c(1.2,1.2,1.2,1.2)
)
# Agregar titulos de los nodos
nodelabels("Bacteria", node = node_bacteria, frame = "none", adj = c(1.1, -0.1), font = 2, cex = 1)
nodelabels("Archaea", node = node_archaea, frame = "none", adj = c(1.1, -0.1), font = 2, cex = 1)
dev.off()
# Leer imagen y convertirla en un objeto ggdraw
p_phylo_heatmap <- ggdraw() + draw_image(tmp_file)
p_phylo_heatmap
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, align = "v", rel_widths = c(1.5, 1))
Fig3A_final_plot
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, align = "v", rel_widths = c(1.5, 1))
Fig3A_final_plot
## 2. Generar el heatmap con leyenda incluida, usando los mismos parámetros que el paso anterior
phylo.heatmap.legendmod(
class_tree_w_g9,
phylo_heatmap_mat,
fsize = c(0.8, 0.9, 0.7),
colors = plot_colors,
grid = TRUE,
split = c(0.7, 0.3),
lwd = 1,
breaks = heatmap_breaks,
mar = c(1.2,1.2,1.2,1.2)
)
## 3. Añadir símbolos de significancia ("*") en cada celda de la matriz que lo indique (en 'sig_mat')
for(i in 1:nrow(sig_mat)) {
for(j in 1:ncol(sig_mat)) {
if(sig_mat[i,j] == "*") {
rnm <- rownames(sig_mat)[i]  # nombre de la fila (clase taxonómica)
cnm <- colnames(sig_mat)[j]  # nombre de la columna (MGE)
# Añadir el símbolo "*" en la posición correspondiente del heatmap
points(
xx_yy$xx[j], xx_yy$yy[i],   # coordenadas x, y para esa celda
cex = 1.5,                  # tamaño del símbolo
col = if (phylo_heatmap_mat[rnm, cnm] < heatmap_breaks[3]) "white" else "black",
pch = "*"                   # símbolo a dibujar
)
}
}
}
Fig3A_final_plot <- plot_grid(p_phylo_heatmap, Fig3A_barplot, ncol = 2, align = "v", rel_widths = c(1.5, 1))
Fig3A_final_plot
